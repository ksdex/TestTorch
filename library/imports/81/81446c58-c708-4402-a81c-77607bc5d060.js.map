{"version":3,"sources":["..\\..\\..\\..\\assets\\script/assets\\script\\Stair.js"],"names":["ghostFirst","require","cc","Class","extends","Component","properties","blackShade","default","type","Node","displayName","ghost","onLoad","director","getCollisionManager","enabled","enabledDebugDraw","enabledDrawBoundingBox","touchingNumber","onCollisionEnter","other","ghostScript","getComponent","myAnimation","Animation","play","ifGhostMove","log","setTimeout","loadScene","onCollisionStay","console","onCollisionExit","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,aAAaC,QAAQ,YAAR,CAAjB;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,oBAAW;AACPC,qBAAQ,IADD;AAEPC,kBAAKP,GAAGQ,IAFD;AAGPC,yBAAY;AAHL,SAhBH;AAqBRC,eAAM;AACFJ,qBAAQ,IADN;AAEFC,kBAAKP,GAAGQ,IAFN;AAGFC,yBAAY;AAHV;AArBE,KAHP;;AA+BL;;AAEAE,YAAQ,kBAAY;;AAEhBX,WAAGY,QAAH,CAAYC,mBAAZ,GAAkCC,OAAlC,GAA4C,IAA5C;AACAd,WAAGY,QAAH,CAAYC,mBAAZ,GAAkCE,gBAAlC,GAAqD,KAArD;AACAf,WAAGY,QAAH,CAAYC,mBAAZ,GAAkCG,sBAAlC,GAA2D,KAA3D;AACA,aAAKC,cAAL,GAAsB,CAAtB;AAEH,KAxCI;;AA0CLC,sBAAkB,0BAAUC,KAAV,EAAiB;;AAEjC,YAAIC,cAAc,KAAKV,KAAL,CAAWW,YAAX,CAAwBvB,UAAxB,CAAlB;AACM,YAAIwB,cAAc,KAAKjB,UAAL,CAAgBgB,YAAhB,CAA6BrB,GAAGuB,SAAhC,CAAlB;AACAD,oBAAYE,IAAZ,CAAiB,WAAjB;AACAJ,oBAAYK,WAAZ,GAA0B,CAA1B;AACAzB,WAAG0B,GAAH,CAAO,KAAKhB,KAAL,CAAWe,WAAlB;AACAE,mBAAW,YAAM;AACb3B,eAAGY,QAAH,CAAYgB,SAAZ,CAAsB,QAAtB;AACH,SAFD,EAEG,IAFH;AAKP,KAtDI;;AAwDLC,qBAAiB,yBAAUV,KAAV,EAAiB;AAC9BW,gBAAQJ,GAAR,CAAY,mBAAZ;AACH,KA1DI;;AA4DLK,qBAAiB,2BAAY,CAE5B,CA9DI;;AAgELC,SAhEK,mBAgEI,CAER;AAlEI;;AAoEL;AApEJ","file":"Stair.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nvar ghostFirst = require(\"firstGhost\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        blackShade:{\n            default:null,\n            type:cc.Node,\n            displayName:'黑幕',\n        },\n        ghost:{\n            default:null,\n            type:cc.Node,\n            displayName:'Ghost',\n        },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad: function () {\n\n        cc.director.getCollisionManager().enabled = true;\n        cc.director.getCollisionManager().enabledDebugDraw = false;\n        cc.director.getCollisionManager().enabledDrawBoundingBox = false;\n        this.touchingNumber = 0;\n\n    },\n\n    onCollisionEnter: function (other) {\n\n      var ghostScript = this.ghost.getComponent(ghostFirst);\n            var myAnimation = this.blackShade.getComponent(cc.Animation);\n            myAnimation.play('TurnBlack');\n            ghostScript.ifGhostMove = 0;\n            cc.log(this.ghost.ifGhostMove);\n            setTimeout(() => {\n                cc.director.loadScene('Scene2');\n            }, 2000);\n      \n\n    },\n\n    onCollisionStay: function (other) {\n        console.log('on collision stay');\n    },\n\n    onCollisionExit: function () {\n\n    },\n\n    start () {\n\n    },\n\n    // update (dt) {},\n});\n"]}