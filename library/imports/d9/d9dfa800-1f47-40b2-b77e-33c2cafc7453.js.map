{"version":3,"sources":["..\\..\\..\\..\\assets\\script/assets\\script\\Empty.js"],"names":["JoystickBG","require","time1","Date","valueOf","time2","stopMove","cc","Class","extends","Component","properties","onLoad","director","getCollisionManager","enabled","enabledDebugDraw","enabledDrawBoundingBox","touchingNumber","onCollisionEnter","other","loadScene","onCollisionStay","console","log","onCollisionExit","start","update","dt"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,aAAaC,QAAQ,aAAR,CAAjB;;AAEA,IAAIC,QAAS,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAZ;AACA,IAAIC,QAAQH,KAAZ;AACA,IAAII,WAAW,CAAf;;AAGAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBQ,KAHP;;AA4BL;;AAEAC,YAAQ,kBAAY;;AAEhBL,WAAGM,QAAH,CAAYC,mBAAZ,GAAkCC,OAAlC,GAA4C,IAA5C;AACAR,WAAGM,QAAH,CAAYC,mBAAZ,GAAkCE,gBAAlC,GAAqD,KAArD;AACAT,WAAGM,QAAH,CAAYC,mBAAZ,GAAkCG,sBAAlC,GAA2D,KAA3D;AACA,aAAKC,cAAL,GAAsB,CAAtB;AAEH,KArCI;;AAuCLC,sBAAkB,0BAAUC,KAAV,EAAiB;AAC/Bb,WAAGM,QAAH,CAAYQ,SAAZ,CAAsB,UAAtB;AAEH,KA1CI;;AA4CLC,qBAAiB,yBAAUF,KAAV,EAAiB;AAC9BG,gBAAQC,GAAR,CAAY,mBAAZ;AACH,KA9CI;;AAgDLC,qBAAiB,2BAAY,CAE5B,CAlDI;;AAoDLC,SApDK,mBAoDG,CAEP,CAtDI;AAwDLC,UAxDK,kBAwDEC,EAxDF,EAwDM;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEH;AA9FI,CAAT","file":"Empty.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nvar JoystickBG = require('JoystickBG1');\r\n\r\nvar time1 = (new Date()).valueOf();\r\nvar time2 = time1;\r\nvar stopMove = 0;\r\n\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        // characterToCal: {\r\n        //     default: null,\r\n        //     type: cc.Node,\r\n        //     displayName: '主角', //use to calculate the distance\r\n        // },\r\n        // _characterWorldPos: 0,\r\n        // _spineWorldPos: 0,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n\r\n        cc.director.getCollisionManager().enabled = true;\r\n        cc.director.getCollisionManager().enabledDebugDraw = false;\r\n        cc.director.getCollisionManager().enabledDrawBoundingBox = false;\r\n        this.touchingNumber = 0;\r\n\r\n    },\r\n\r\n    onCollisionEnter: function (other) {\r\n        cc.director.loadScene('GameLose');\r\n\r\n    },\r\n\r\n    onCollisionStay: function (other) {\r\n        console.log('on collision stay');\r\n    },\r\n\r\n    onCollisionExit: function () {\r\n\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    update(dt) {\r\n        // var myAnimation = this.getComponent(cc.Animation);\r\n        // this._characterWorldPos = this.characterToCal.convertToWorldSpaceAR(this.node.getPosition());\r\n        // this._spineWorldPos = this.node.convertToWorldSpaceAR(this.node.getPosition());\r\n        // cc.log(this._characterWorldPos.y);\r\n        // cc.log('----test----');\r\n        // cc.log(this._spineWorldPos.y);\r\n        \r\n        // if (Math.abs(this._characterWorldPos.y - this._spineWorldPos.y) < 50) {\r\n        //     time1 = (new Date()).valueOf();\r\n        //     time2 = time1;\r\n        //     while (stopMove == 0) {\r\n        //         time2 = (new Date()).valueOf();\r\n        //         if (time2 - time1 >= 1500) {\r\n\r\n        //             myAnimation.play('move');\r\n        //             time1 = (new Date()).valueOf();// animation lasts for 1.5s\r\n        //             time2 = time1;\r\n        //             while (1) {\r\n\r\n        //                 time2 = (new Date()).valueOf();\r\n        //                 if (time2 - time1 > 1500) {\r\n        //                     stopMove = 0;\r\n        //                     break;\r\n        //                 }\r\n        //             }\r\n        //         }\r\n        //         else {\r\n        //             time1 = (new Date()).valueOf();\r\n        //         }\r\n\r\n        //     }\r\n\r\n        // }\r\n        // else {\r\n        //     ;\r\n        // }\r\n\r\n    },\r\n});\r\n"]}