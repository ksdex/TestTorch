{"version":3,"sources":["..\\..\\..\\..\\assets\\script/assets\\script\\JoystickBG1.js"],"names":["Common","require","cc","Class","extends","Component","properties","dot","default","type","Node","displayName","publicAngle","flagx","flagy","_joyCom","_playerNode","_angle","_radian","_speed","_speed1","_speed2","_opacity","_timeStart","_timeLimit","_ifMove","onLoad","node","parent","getComponent","sprite","touchType","TouchType","DEFAULT","_initTouchEvent","Date","valueOf","self","on","EventType","TOUCH_START","_touchStartEvent","TOUCH_MOVE","_touchMoveEvent","TOUCH_END","_touchEndEvent","TOUCH_CANCEL","update","dt","directionType","DirectionType","ALL","_allDirectionsMove","x","Math","cos","PI","y","sin","_getDistance","pos1","pos2","sqrt","pow","_getRadian","point","_getAngle","pos","getPosition","atan2","_setSpeed","distance","_radius","event","touchPos","convertToNodeSpaceAR","getLocation","p","radius","width","_stickPos","posX","posY","setPosition"],"mappings":"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","file":"JoystickBG1.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["var Common = require('JoystickCommon');\n\n\ncc.Class({\n    extends: cc.Component,\n\n\n    properties: {\n        dot: {\n            default: null,\n            type: cc.Node,\n            displayName: '摇杆节点',\n        },\n\n        publicAngle: {\n            default: 0,\n            displayName: '当前角度'\n        },\n\n        flagx: {\n            default: 1,\n            displayName: '当前角度'\n        },\n\n        flagy: {\n            default: 1,\n            displayName: '当前角度'\n        },\n\n        _joyCom: {\n            default: null,\n            displayName: 'joy Node',\n\n        },\n        _playerNode: {\n            default: null,\n            displayName: '被操作的目标Node',\n        },\n\n        _angle: {\n            default: null,\n            displayName: '当前触摸的角度',\n\n        },\n\n        _radian: {\n            default: null,\n            displayName: '弧度',\n        },\n\n\n\n\n\n        _speed: 0,          //实际速度\n        _speed1: 1,         //一段速度\n        _speed2: 2,         //二段速度\n        _opacity: 0,        //透明度\n        _timeStart: 0,\n        _timeLimit: 0,\n        _ifMove: 0,\n\n    },\n\n    onLoad: function () {\n        // joy下的Joystick1组件\n        this._joyCom = this.node.parent.getComponent('Joystick1');\n        // Joystick2组件下的player节点\n        this._playerNode = this._joyCom.sprite;\n\n        if (this._joyCom.touchType == Common.TouchType.DEFAULT) {\n            //对圆圈的触摸监听\n            this._initTouchEvent();\n        }\n        this._ifMove = 0;\n        this._timeStart = (new Date()).valueOf();\n        this._timeLimit = this._timeStart + 5000;\n\n    },\n\n    //对圆圈的触摸监听\n    _initTouchEvent: function () {\n        var self = this;\n\n        self.node.on(cc.Node.EventType.TOUCH_START, this._touchStartEvent, self);\n\n        self.node.on(cc.Node.EventType.TOUCH_MOVE, this._touchMoveEvent, self);\n\n        // 触摸在圆圈内离开或在圆圈外离开后，摇杆归位，player速度为0\n        self.node.on(cc.Node.EventType.TOUCH_END, this._touchEndEvent, self);\n        self.node.on(cc.Node.EventType.TOUCH_CANCEL, this._touchEndEvent, self);\n\n    },\n\n    //更新移动目标\n    update: function (dt) {\n        this._timeStart = (new Date()).valueOf();\n        switch (this._joyCom.directionType) {\n            case Common.DirectionType.ALL:\n\n\n                if (this._timeStart >= this._timeLimit) {\n                    this._allDirectionsMove();\n                }\n\n\n                break;\n            default:\n                break;\n        }\n\n    },\n    //全方向移动\n    _allDirectionsMove: function () {\n        if (this.flagx == 1) {\n            this._playerNode.x -= Math.cos(this._angle * (Math.PI / 180)) * this._speed * 2;\n        }\n\n        if (this.flagy == 1) {\n            this._playerNode.y -= Math.sin(this._angle * (Math.PI / 180)) * this._speed * 2;\n        }\n\n    },\n\n    //计算两点间的距离并返回\n    _getDistance: function (pos1, pos2) {\n        return Math.sqrt(Math.pow(pos1.x - pos2.x, 2) +\n            Math.pow(pos1.y - pos2.y, 2));\n    },\n\n    /*角度/弧度转换\n    角度 = 弧度 * 180 / Math.PI\n    弧度 = 角度 * Math.PI / 180*/\n    //计算弧度并返回\n    _getRadian: function (point) {\n        this._radian = Math.PI / 180 * this._getAngle(point);\n        return this._radian;\n    },\n\n    //计算角度并返回\n    _getAngle: function (point) {\n\n        var pos = this.node.getPosition();\n        this._angle = Math.atan2(point.y - pos.y, point.x - pos.x) * (180 / Math.PI);\n        this.publicAngle = this._angle;\n        return this._angle;\n    },\n\n    //设置实际速度\n    _setSpeed: function (point) {\n        //触摸点和遥控杆中心的距离\n        var distance = this._getDistance(point, this.node.getPosition());\n\n        //如果半径\n        if (distance < this._radius) {\n            this._speed = this._speed1;\n        }\n        else {\n            this._speed = this._speed2;\n        }\n    },\n\n    _touchStartEvent: function (event) {\n        // 获取触摸位置的世界坐标转换成圆圈的相对坐标（以圆圈的锚点为基准）\n        this._ifMove = 1;\n        var touchPos = this.node.convertToNodeSpaceAR(event.getLocation());\n        //触摸点与圆圈中心的距离\n        var distance = this._getDistance(touchPos, cc.p(0, 0));\n        //圆圈半径\n        var radius = this.node.width / 2;\n        // 记录摇杆位置，给touch move使用\n        this._stickPos = touchPos;\n        var posX = this.node.getPosition().x + touchPos.x;\n        var posY = this.node.getPosition().y + touchPos.y;\n        \n        \n\n        //手指在圆圈内触摸,控杆跟随触摸点\n        if (radius > distance) {\n            this.dot.setPosition(cc.p(posX, posY));\n            return true;\n        }\n        return false;\n    },\n\n    _touchMoveEvent: function (event) {\n        var touchPos = this.node.convertToNodeSpaceAR(event.getLocation());\n        var distance = this._getDistance(touchPos, cc.p(0, 0));\n        var radius = this.node.width / 2;\n        // 由于摇杆的postion是以父节点为锚点，所以定位要加上ring和dot当前的位置(stickX,stickY)\n        var posX = this.node.getPosition().x + touchPos.x;\n        var posY = this.node.getPosition().y + touchPos.y;\n        if (radius > distance) {\n            this.dot.setPosition(cc.p(posX, posY));\n        }\n        else {\n            //控杆永远保持在圈内，并在圈内跟随触摸更新角度\n            var x = this.node.getPosition().x + Math.cos(this._getRadian(cc.p(posX, posY))) * radius;\n            var y = this.node.getPosition().y + Math.sin(this._getRadian(cc.p(posX, posY))) * radius;\n            this.dot.setPosition(cc.p(x, y));\n        }\n        //更新角度\n        this._getAngle(cc.p(posX, posY));\n        //设置实际速度\n        this._setSpeed(cc.p(posX, posY));\n        \n\n    },\n\n    _touchEndEvent: function () {\n        this.dot.setPosition(this.node.getPosition());\n        this._speed = 0;\n        this._ifMove = 0;\n    },\n});\n"]}