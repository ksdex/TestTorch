{"version":3,"sources":["Spine.js"],"names":["JoystickBG","require","cc","Class","extends","Component","properties","characterToCal","default","type","Node","displayName","medalAudio","url","AudioClip","_characterWorldPos","_spineWorldPos","_stopMove","_correspondY","_time1","_time2","onLoad","Date","valueOf","log","start","update","dt","myAnimation","getComponent","Animation","convertToWorldSpaceAR","getPosition","node","Math","abs","y","audioEngine","play"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,aAAaC,QAAQ,aAAR,CAAjB;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,wBAAgB;AACZC,qBAAS,IADG;AAEZC,kBAAMP,GAAGQ,IAFG;AAGZC,yBAAa,IAHD,CAGO;AAHP,SAhBR;AAqBRC,oBAAW;AACPJ,qBAAQ,IADD;AAEPK,iBAAIX,GAAGY;AAFA,SArBH;;AA0BRC,4BAAoB,CA1BZ;AA2BRC,wBAAgB,CA3BR;AA4BRC,mBAAY,CA5BJ;AA6BRC,sBAAc,CA7BN;AA8BRC,gBAAS,CA9BD;AA+BRC,gBAAS;AA/BD,KAHP;;AAqCL;;AAEAC,YAAQ,kBAAY;AAChB,aAAKF,MAAL,GAAe,IAAIG,IAAJ,EAAD,CAAaC,OAAb,EAAd;AACA,aAAKH,MAAL,GAAc,KAAKD,MAAnB;AACA,aAAKJ,kBAAL,GAA0B,CAA1B;AACA,aAAKC,cAAL,GAAsB,CAAtB;AACA,aAAKC,SAAL,GAAiB,CAAjB;AACA,aAAKC,YAAL,GAAoB,CAApB;AACAhB,WAAGsB,GAAH,CAAO,mBAAP;AACH,KA/CI;;AAkDLC,SAlDK,mBAkDG,CAEP,CApDI;AAsDLC,UAtDK,kBAsDEC,EAtDF,EAsDM;AACP,YAAIC,cAAc,KAAKC,YAAL,CAAkB3B,GAAG4B,SAArB,CAAlB;AACA,aAAKf,kBAAL,GAA0B,KAAKR,cAAL,CAAoBwB,qBAApB,CAA0C,KAAKxB,cAAL,CAAoByB,WAApB,EAA1C,CAA1B;AACA,aAAKhB,cAAL,GAAsB,KAAKiB,IAAL,CAAUF,qBAAV,CAAgC,KAAKxB,cAAL,CAAoByB,WAApB,EAAhC,CAAtB;;AAGA,YAAIE,KAAKC,GAAL,CAAS,KAAKpB,kBAAL,CAAwBqB,CAAxB,GAA4B,KAAKpB,cAAL,CAAoBoB,CAAzD,IAA8D,EAA9D,IAAoE,KAAKlB,YAAL,IAAqB,CAA7F,EACA;AACK,gBAAG,KAAKA,YAAL,IAAqB,CAAxB,EACA;AACI,qBAAKC,MAAL,GAAe,IAAIG,IAAJ,EAAD,CAAaC,OAAb,EAAd;AACH;AACF,iBAAKL,YAAL,GAAoB,CAApB;AACA,iBAAKE,MAAL,GAAe,IAAIE,IAAJ,EAAD,CAAaC,OAAb,EAAd;AACA,gBAAI,KAAKH,MAAL,GAAc,KAAKD,MAAnB,IAA6B,GAA7B,IAAoC,KAAKF,SAAL,IAAkB,CAA1D,EAA6D;AACzDf,mBAAGmC,WAAH,CAAeC,IAAf,CAAoB,KAAK1B,UAAzB,EAAoC,KAApC;AACAgB,4BAAYU,IAAZ,CAAiB,OAAjB;AACA,qBAAKrB,SAAL,GAAiB,CAAjB;AACH;AACJ,SAbD,MAeA;AACI,iBAAKC,YAAL,GAAoB,CAApB;AACH;AAEJ;AA/EI,CAAT","file":"Spine.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nvar JoystickBG = require('JoystickBG1');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        characterToCal: {\r\n            default: null,\r\n            type: cc.Node,\r\n            displayName: '主角', //use to calculate the distance\r\n        },\r\n        medalAudio:{\r\n            default:null,\r\n            url:cc.AudioClip,\r\n        },\r\n\r\n        _characterWorldPos: 0,\r\n        _spineWorldPos: 0,\r\n        _stopMove : 0,\r\n        _correspondY: 0,\r\n        _time1 : 0,\r\n        _time2 : 0,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n        this._time1 = (new Date()).valueOf();\r\n        this._time2 = this._time1;\r\n        this._characterWorldPos = 0;\r\n        this._spineWorldPos = 0;\r\n        this._stopMove = 0;\r\n        this._correspondY = 0;\r\n        cc.log(\"Successfully load\");\r\n    },\r\n\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    update(dt) {\r\n        var myAnimation = this.getComponent(cc.Animation);\r\n        this._characterWorldPos = this.characterToCal.convertToWorldSpaceAR(this.characterToCal.getPosition());\r\n        this._spineWorldPos = this.node.convertToWorldSpaceAR(this.characterToCal.getPosition());\r\n\r\n\r\n        if (Math.abs(this._characterWorldPos.y - this._spineWorldPos.y) < 40 || this._correspondY == 1)\r\n        {\r\n             if(this._correspondY == 0 )\r\n             {\r\n                 this._time1 = (new Date()).valueOf();\r\n             }\r\n            this._correspondY = 1;\r\n            this._time2 = (new Date()).valueOf();\r\n            if (this._time2 - this._time1 >= 500 && this._stopMove == 0) {\r\n                cc.audioEngine.play(this.medalAudio,false);\r\n                myAnimation.play('spine');\r\n                this._stopMove = 1;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this._correspondY = 0;\r\n        }\r\n        \r\n    },\r\n});\r\n"]}